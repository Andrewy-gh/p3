/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ToolCallingRouteImport } from './routes/tool-calling'
import { Route as SystemPromptsRouteImport } from './routes/system-prompts'
import { Route as StreamTextToUiRouteImport } from './routes/stream-text-to-ui'
import { Route as PassingImagsAndFilesRouteImport } from './routes/passing-imags-and-files'
import { Route as IndexRouteImport } from './routes/index'

const ToolCallingRoute = ToolCallingRouteImport.update({
  id: '/tool-calling',
  path: '/tool-calling',
  getParentRoute: () => rootRouteImport,
} as any)
const SystemPromptsRoute = SystemPromptsRouteImport.update({
  id: '/system-prompts',
  path: '/system-prompts',
  getParentRoute: () => rootRouteImport,
} as any)
const StreamTextToUiRoute = StreamTextToUiRouteImport.update({
  id: '/stream-text-to-ui',
  path: '/stream-text-to-ui',
  getParentRoute: () => rootRouteImport,
} as any)
const PassingImagsAndFilesRoute = PassingImagsAndFilesRouteImport.update({
  id: '/passing-imags-and-files',
  path: '/passing-imags-and-files',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/passing-imags-and-files': typeof PassingImagsAndFilesRoute
  '/stream-text-to-ui': typeof StreamTextToUiRoute
  '/system-prompts': typeof SystemPromptsRoute
  '/tool-calling': typeof ToolCallingRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/passing-imags-and-files': typeof PassingImagsAndFilesRoute
  '/stream-text-to-ui': typeof StreamTextToUiRoute
  '/system-prompts': typeof SystemPromptsRoute
  '/tool-calling': typeof ToolCallingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/passing-imags-and-files': typeof PassingImagsAndFilesRoute
  '/stream-text-to-ui': typeof StreamTextToUiRoute
  '/system-prompts': typeof SystemPromptsRoute
  '/tool-calling': typeof ToolCallingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/passing-imags-and-files'
    | '/stream-text-to-ui'
    | '/system-prompts'
    | '/tool-calling'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/passing-imags-and-files'
    | '/stream-text-to-ui'
    | '/system-prompts'
    | '/tool-calling'
  id:
    | '__root__'
    | '/'
    | '/passing-imags-and-files'
    | '/stream-text-to-ui'
    | '/system-prompts'
    | '/tool-calling'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PassingImagsAndFilesRoute: typeof PassingImagsAndFilesRoute
  StreamTextToUiRoute: typeof StreamTextToUiRoute
  SystemPromptsRoute: typeof SystemPromptsRoute
  ToolCallingRoute: typeof ToolCallingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tool-calling': {
      id: '/tool-calling'
      path: '/tool-calling'
      fullPath: '/tool-calling'
      preLoaderRoute: typeof ToolCallingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/system-prompts': {
      id: '/system-prompts'
      path: '/system-prompts'
      fullPath: '/system-prompts'
      preLoaderRoute: typeof SystemPromptsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stream-text-to-ui': {
      id: '/stream-text-to-ui'
      path: '/stream-text-to-ui'
      fullPath: '/stream-text-to-ui'
      preLoaderRoute: typeof StreamTextToUiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/passing-imags-and-files': {
      id: '/passing-imags-and-files'
      path: '/passing-imags-and-files'
      fullPath: '/passing-imags-and-files'
      preLoaderRoute: typeof PassingImagsAndFilesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PassingImagsAndFilesRoute: PassingImagsAndFilesRoute,
  StreamTextToUiRoute: StreamTextToUiRoute,
  SystemPromptsRoute: SystemPromptsRoute,
  ToolCallingRoute: ToolCallingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
